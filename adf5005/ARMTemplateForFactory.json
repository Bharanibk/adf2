{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf5005"
		},
		"AzureSqlDatabase1_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'AzureSqlDatabase1'"
		},
		"AKVStorage_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "@{linkedService().akvurl}"
		},
		"AzureSqlDatabase1_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "sqlsvr5005.database.windows.net"
		},
		"AzureSqlDatabase1_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "sample"
		},
		"AzureSqlDatabase1_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "clouduser"
		},
		"ls_storage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://shared5005.dfs.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/GittestPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings",
									"copyBehavior": "MergeFiles"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "JollyGoodSalesDataset",
								"type": "DatasetReference",
								"parameters": {
									"lsSourceContainer": "adflab1",
									"ds_JG_akvurl": "https://labkv5005.vault.azure.net/"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Runid",
								"type": "DatasetReference",
								"parameters": {
									"dssourceContainer": "adflab1",
									"ds_runid_aksurl": "https://labkv5005.vault.azure.net/"
								}
							}
						]
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Copy data1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "temp",
							"value": "tempvalue"
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Set variable1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "temp",
							"value": "newvalue abc 2"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"temp": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/JollyGoodSalesDataset')]",
				"[concat(variables('factoryId'), '/datasets/Runid')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LoadJollyGoodSales')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup2",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Runid",
								"type": "DatasetReference",
								"parameters": {
									"dssourceContainer": {
										"value": "@pipeline().parameters.sourceContainer",
										"type": "Expression"
									},
									"ds_runid_aksurl": {
										"value": "@pipeline().globalParameters.gp_akvurl",
										"type": "Expression"
									}
								}
							}
						}
					},
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Lookup2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "dataflow1",
								"type": "DataFlowReference",
								"parameters": {
									"RunSeqNo": -1,
									"sourceContainer": {
										"value": "'@{pipeline().parameters.sourceContainer}'",
										"type": "Expression"
									},
									"targetContainer": {
										"value": "'@{pipeline().parameters.TargetContainer}'",
										"type": "Expression"
									}
								},
								"datasetParameters": {
									"source1": {},
									"source2": {},
									"sink1": {}
								},
								"linkedServiceParameters": {
									"source1": {
										"linkedService": {
											"st_akvurl": {
												"value": "@pipeline().globalParameters.gp_akvurl",
												"type": "Expression"
											}
										}
									},
									"source2": {
										"linkedService": {
											"st_akvurl": {
												"value": "@pipeline().globalParameters.gp_akvurl",
												"type": "Expression"
											}
										}
									},
									"sink1": {
										"linkedService": {
											"st_akvurl": {
												"value": "@pipeline().globalParameters.gp_akvurl",
												"type": "Expression"
											}
										}
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"sourceContainer": {
						"type": "string"
					},
					"TargetContainer": {
						"type": "string"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-10-13T15:06:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Runid')]",
				"[concat(variables('factoryId'), '/dataflows/dataflow1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JollyGoodSalesDataset')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_storage",
					"type": "LinkedServiceReference",
					"parameters": {
						"st_akvurl": {
							"value": "@dataset().ds_JG_akvurl",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"lsSourceContainer": {
						"type": "string",
						"defaultValue": "adflab1"
					},
					"ds_JG_akvurl": {
						"type": "string",
						"defaultValue": "https://labkv5005.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "SALES",
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": "raw/SampleData/JollyGood",
						"fileSystem": {
							"value": "@dataset().lsSourceContainer",
							"type": "Expression"
						}
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "Period",
						"type": "String"
					},
					{
						"name": "Product",
						"type": "String"
					},
					{
						"name": "Unit Price",
						"type": "String"
					},
					{
						"name": "Currency",
						"type": "String"
					},
					{
						"name": "Units Sold",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Runid')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_storage",
					"type": "LinkedServiceReference",
					"parameters": {
						"st_akvurl": {
							"value": "@dataset().ds_runid_aksurl",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"dssourceContainer": {
						"type": "string",
						"defaultValue": "adflab1"
					},
					"ds_runid_aksurl": {
						"type": "string",
						"defaultValue": "https://labkv5005.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "RunSeqNo.csv",
						"folderPath": "raw/SampleData",
						"fileSystem": {
							"value": "@dataset().dssourceContainer",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "RunSeqNo",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_storage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AKVStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"akvurl": {
						"type": "string",
						"defaultValue": "https://labkv5005.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AKVStorage_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabase1_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabase1_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabase1_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('AzureSqlDatabase1_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ls_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"st_akvurl": {
						"type": "string",
						"defaultValue": "https://labkv5005.vault.azure.net/"
					}
				},
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('ls_storage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AKVStorage",
							"type": "LinkedServiceReference",
							"parameters": {
								"akvurl": {
									"value": "@linkedService().st_akvurl",
									"type": "Expression"
								}
							}
						},
						"secretName": "sourcestoragekey"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AKVStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflow1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"linkedService": {
								"referenceName": "ls_storage",
								"type": "LinkedServiceReference"
							},
							"name": "source1"
						},
						{
							"linkedService": {
								"referenceName": "ls_storage",
								"type": "LinkedServiceReference"
							},
							"name": "source2"
						}
					],
					"sinks": [
						{
							"linkedService": {
								"referenceName": "ls_storage",
								"type": "LinkedServiceReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "filter1"
						},
						{
							"name": "filter2"
						},
						{
							"name": "join1"
						},
						{
							"name": "derivedColumn1"
						},
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     RunSeqNo as integer (-1),",
						"     sourceContainer as string,",
						"     targetContainer as string",
						"}",
						"source(output(",
						"          Period as date,",
						"          Product as string,",
						"          {Unit Price} as double,",
						"          Currency as string,",
						"          {Units Sold} as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'excel',",
						"     fileSystem: ($sourceContainer),",
						"     folderPath: 'raw/SampleData/JollyGood',",
						"     fileName: 'Sales Apr-Sep 2020.xlsx',",
						"     sheetName: 'SALES',",
						"     firstRowAsHeader: true) ~> source1",
						"source(output(",
						"          FromCurrency as string,",
						"          ToCurrency as string,",
						"          Date as date,",
						"          ExchangeRate as double",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false,",
						"     format: 'excel',",
						"     fileSystem: ($sourceContainer),",
						"     folderPath: 'raw/SampleData',",
						"     fileName: 'ExchangeRates.xlsx',",
						"     sheetName: 'Sheet1',",
						"     firstRowAsHeader: true) ~> source2",
						"source1 filter(Product != 'Month Total') ~> filter1",
						"source2 filter(ToCurrency=='USD') ~> filter2",
						"filter1, filter2 join(Currency == FromCurrency",
						"     && Period == Date,",
						"     joinType:'inner',",
						"     matchType:'exact',",
						"     ignoreSpaces: false,",
						"     broadcast: 'auto')~> join1",
						"join1 derive(SalesValueUSD = {Unit Price}*{Units Sold}*ExchangeRate,",
						"          Retailer = \"Jolly Goods Inc\",",
						"          RunSeqNo = $RunSeqNo) ~> derivedColumn1",
						"derivedColumn1 select(mapColumn(",
						"          Period,",
						"          Product,",
						"          {Units Sold},",
						"          SalesValueUSD,",
						"          Retailer,",
						"          RunSeqNo",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'delimited',",
						"     fileSystem: ($targetContainer),",
						"     folderPath: 'output/SalesData',",
						"     columnDelimiter: ',',",
						"     escapeChar: '\\\\',",
						"     quoteChar: '\\\"',",
						"     columnNamesAsHeader: true,",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ls_storage')]"
			]
		}
	]
}