{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "ls_storage",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				},
				{
					"linkedService": {
						"referenceName": "ls_storage",
						"type": "LinkedServiceReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "ls_storage",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "filter1"
				},
				{
					"name": "filter2"
				},
				{
					"name": "join1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     RunSeqNo as integer (-1),",
				"     sourceContainer as string,",
				"     targetContainer as string",
				"}",
				"source(output(",
				"          Period as date,",
				"          Product as string,",
				"          {Unit Price} as double,",
				"          Currency as string,",
				"          {Units Sold} as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'excel',",
				"     fileSystem: ($sourceContainer),",
				"     folderPath: 'raw/SampleData/JollyGood',",
				"     fileName: 'Sales Apr-Sep 2020.xlsx',",
				"     sheetName: 'SALES',",
				"     firstRowAsHeader: true) ~> source1",
				"source(output(",
				"          FromCurrency as string,",
				"          ToCurrency as string,",
				"          Date as date,",
				"          ExchangeRate as double",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'excel',",
				"     fileSystem: ($sourceContainer),",
				"     folderPath: 'raw/SampleData',",
				"     fileName: 'ExchangeRates.xlsx',",
				"     sheetName: 'Sheet1',",
				"     firstRowAsHeader: true) ~> source2",
				"source1 filter(Product != 'Month Total') ~> filter1",
				"source2 filter(ToCurrency=='USD') ~> filter2",
				"filter1, filter2 join(Currency == FromCurrency",
				"     && Period == Date,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"join1 derive(SalesValueUSD = {Unit Price}*{Units Sold}*ExchangeRate,",
				"          Retailer = \"Jolly Goods Inc\",",
				"          RunSeqNo = $RunSeqNo) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          Period,",
				"          Product,",
				"          {Units Sold},",
				"          SalesValueUSD,",
				"          Retailer,",
				"          RunSeqNo",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delimited',",
				"     fileSystem: ($targetContainer),",
				"     folderPath: 'output/SalesData',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}